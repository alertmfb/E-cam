/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as IndexImport } from './routes/index'
import { Route as AppAImport } from './routes/app/_a'
import { Route as AppALoansIndexImport } from './routes/app/_a.loans/index'
import { Route as AppADashboardIndexImport } from './routes/app/_a.dashboard/index'
import { Route as AppALoansStatusImport } from './routes/app/_a.loans/status'
import { Route as AppALoansRejectedImport } from './routes/app/_a.loans/rejected'
import { Route as AppALoansPendingImport } from './routes/app/_a.loans/pending'
import { Route as AppALoansNewImport } from './routes/app/_a.loans/new'
import { Route as AppALoansIncompleteImport } from './routes/app/_a.loans/incomplete'
import { Route as AppALoansLoanIdIndexImport } from './routes/app/_a.loans/$loanId/index'
import { Route as AppALoansLoanIdReferenceImport } from './routes/app/_a.loans/$loanId/reference'
import { Route as AppALoansLoanIdPictoralEvidenceImport } from './routes/app/_a.loans/$loanId/pictoral-evidence'
import { Route as AppALoansLoanIdGuarantorsInfoImport } from './routes/app/_a.loans/$loanId/guarantors-info'
import { Route as AppALoansLoanIdGuarantorVerificationImport } from './routes/app/_a.loans/$loanId/guarantor-verification'
import { Route as AppALoansLoanIdFamilyExpensesImport } from './routes/app/_a.loans/$loanId/family-expenses'
import { Route as AppALoansLoanIdClientInformationImport } from './routes/app/_a.loans/$loanId/client-information'
import { Route as AppALoansLoanIdBusinessExpensesImport } from './routes/app/_a.loans/$loanId/business-expenses'

// Create Virtual Routes

const AppImport = createFileRoute('/app')()

// Create/Update Routes

const AppRoute = AppImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppARoute = AppAImport.update({
  id: '/_a',
  getParentRoute: () => AppRoute,
} as any)

const AppALoansIndexRoute = AppALoansIndexImport.update({
  path: '/loans/',
  getParentRoute: () => AppARoute,
} as any)

const AppADashboardIndexRoute = AppADashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => AppARoute,
} as any)

const AppALoansStatusRoute = AppALoansStatusImport.update({
  path: '/loans/status',
  getParentRoute: () => AppARoute,
} as any)

const AppALoansRejectedRoute = AppALoansRejectedImport.update({
  path: '/loans/rejected',
  getParentRoute: () => AppARoute,
} as any)

const AppALoansPendingRoute = AppALoansPendingImport.update({
  path: '/loans/pending',
  getParentRoute: () => AppARoute,
} as any)

const AppALoansNewRoute = AppALoansNewImport.update({
  path: '/loans/new',
  getParentRoute: () => AppARoute,
} as any)

const AppALoansIncompleteRoute = AppALoansIncompleteImport.update({
  path: '/loans/incomplete',
  getParentRoute: () => AppARoute,
} as any)

const AppALoansLoanIdIndexRoute = AppALoansLoanIdIndexImport.update({
  path: '/loans/$loanId/',
  getParentRoute: () => AppARoute,
} as any)

const AppALoansLoanIdReferenceRoute = AppALoansLoanIdReferenceImport.update({
  path: '/loans/$loanId/reference',
  getParentRoute: () => AppARoute,
} as any)

const AppALoansLoanIdPictoralEvidenceRoute =
  AppALoansLoanIdPictoralEvidenceImport.update({
    path: '/loans/$loanId/pictoral-evidence',
    getParentRoute: () => AppARoute,
  } as any)

const AppALoansLoanIdGuarantorsInfoRoute =
  AppALoansLoanIdGuarantorsInfoImport.update({
    path: '/loans/$loanId/guarantors-info',
    getParentRoute: () => AppARoute,
  } as any)

const AppALoansLoanIdGuarantorVerificationRoute =
  AppALoansLoanIdGuarantorVerificationImport.update({
    path: '/loans/$loanId/guarantor-verification',
    getParentRoute: () => AppARoute,
  } as any)

const AppALoansLoanIdFamilyExpensesRoute =
  AppALoansLoanIdFamilyExpensesImport.update({
    path: '/loans/$loanId/family-expenses',
    getParentRoute: () => AppARoute,
  } as any)

const AppALoansLoanIdClientInformationRoute =
  AppALoansLoanIdClientInformationImport.update({
    path: '/loans/$loanId/client-information',
    getParentRoute: () => AppARoute,
  } as any)

const AppALoansLoanIdBusinessExpensesRoute =
  AppALoansLoanIdBusinessExpensesImport.update({
    path: '/loans/$loanId/business-expenses',
    getParentRoute: () => AppARoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/_a': {
      preLoaderRoute: typeof AppAImport
      parentRoute: typeof AppRoute
    }
    '/app/_a/loans/incomplete': {
      preLoaderRoute: typeof AppALoansIncompleteImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/new': {
      preLoaderRoute: typeof AppALoansNewImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/pending': {
      preLoaderRoute: typeof AppALoansPendingImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/rejected': {
      preLoaderRoute: typeof AppALoansRejectedImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/status': {
      preLoaderRoute: typeof AppALoansStatusImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/dashboard/': {
      preLoaderRoute: typeof AppADashboardIndexImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/': {
      preLoaderRoute: typeof AppALoansIndexImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/$loanId/business-expenses': {
      preLoaderRoute: typeof AppALoansLoanIdBusinessExpensesImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/$loanId/client-information': {
      preLoaderRoute: typeof AppALoansLoanIdClientInformationImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/$loanId/family-expenses': {
      preLoaderRoute: typeof AppALoansLoanIdFamilyExpensesImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/$loanId/guarantor-verification': {
      preLoaderRoute: typeof AppALoansLoanIdGuarantorVerificationImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/$loanId/guarantors-info': {
      preLoaderRoute: typeof AppALoansLoanIdGuarantorsInfoImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/$loanId/pictoral-evidence': {
      preLoaderRoute: typeof AppALoansLoanIdPictoralEvidenceImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/$loanId/reference': {
      preLoaderRoute: typeof AppALoansLoanIdReferenceImport
      parentRoute: typeof AppAImport
    }
    '/app/_a/loans/$loanId/': {
      preLoaderRoute: typeof AppALoansLoanIdIndexImport
      parentRoute: typeof AppAImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  SignInRoute,
  AppRoute.addChildren([
    AppARoute.addChildren([
      AppALoansIncompleteRoute,
      AppALoansNewRoute,
      AppALoansPendingRoute,
      AppALoansRejectedRoute,
      AppALoansStatusRoute,
      AppADashboardIndexRoute,
      AppALoansIndexRoute,
      AppALoansLoanIdBusinessExpensesRoute,
      AppALoansLoanIdClientInformationRoute,
      AppALoansLoanIdFamilyExpensesRoute,
      AppALoansLoanIdGuarantorVerificationRoute,
      AppALoansLoanIdGuarantorsInfoRoute,
      AppALoansLoanIdPictoralEvidenceRoute,
      AppALoansLoanIdReferenceRoute,
      AppALoansLoanIdIndexRoute,
    ]),
  ]),
])

/* prettier-ignore-end */
